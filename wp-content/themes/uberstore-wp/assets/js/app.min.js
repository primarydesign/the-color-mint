var favicon;

!function($, window, undefined) {
    "use strict";
    for (var lastTime = 0, vendors = [ "ms", "moz", "webkit", "o" ], x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) window.requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"], 
    window.cancelAnimationFrame = window[vendors[x] + "CancelAnimationFrame"] || window[vendors[x] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function(callback) {
        var currTime = new Date().getTime(), timeToCall = Math.max(0, 16 - (currTime - lastTime)), id = window.setTimeout(function() {
            callback(currTime + timeToCall);
        }, timeToCall);
        return lastTime = currTime + timeToCall, id;
    }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(id) {
        clearTimeout(id);
    });
    var $doc = $(document), win = $(window), scrollTime = (window.Modernizr, null), thb_easing = [ .75, 0, .175, 1 ], SITE = SITE || {};
    SITE = {
        init: function() {
            var obj, self = this;
            for (obj in self) if (self.hasOwnProperty(obj)) {
                var _method = self[obj];
                _method.selector !== undefined && _method.init !== undefined && $(_method.selector).length > 0 && _method.init();
            }
        },
        hoverEvents: {
            selector: "body",
            init: function() {
                var base = this, container = $(base.selector);
                win.on("scroll", function() {
                    clearTimeout(scrollTime), container.hasClass("disable-hover") || container.addClass("disable-hover"), 
                    scrollTime = setTimeout(function() {
                        container.removeClass("disable-hover");
                    }, 400);
                });
            }
        },
        responsiveNav: {
            selector: "#mobile-toggle",
            target: "#sidr-main",
            init: function() {
                var base = this, container = $(base.selector), target = $(base.target);
                container.on("click", function() {
                    return !1;
                }), container.sidr({
                    name: "sidr-main",
                    source: base.target,
                    displace: !1,
                    renaming: !1
                }), target.find("ul li").each(function() {
                    $(this).find("> ul").length > 0 && ($(this).find("> a").append('<span class="toggle"><i class="fa fa-plus"></i></span>'), 
                    $(this).find("li a").not(":has(i)").prepend('<span><i class="fa fa-angle-right"></i></span>'));
                }), target.find('ul li:has(">ul") > a').click(function() {
                    return $(this).toggleClass("active"), $(this).find("i").toggleClass("fa fa-plus").toggleClass("fa fa-minus"), 
                    $(this).parent().find("> ul").stop(!0, !0).slideToggle(), !1;
                }), $("#sidr-close").click(function() {
                    return $.sidr("close", "sidr-main"), !1;
                });
            },
            toggle: function() {
                win.width() > 767 && $.sidr("close", "sidr-main");
            }
        },
        navDropdown: {
            selector: "#nav .sf-menu",
            init: function() {
                var base = this, container = $(base.selector), item = container.find(">li.menu-item-has-children");
                item.each(function() {
                    var that = $(this), offset = that.offset(), h = that.find("h6"), dropdown = that.find(".dropdown"), submenus = dropdown.find(".dropdown-column");
                    submenus.length > 1 && dropdown.imagesLoaded(function() {
                        base.calculateWidth(that);
                    }), h && h.prependTo(dropdown), that.hoverIntent(function() {
                        offset.right = $(window).width() - (offset.left + dropdown.outerWidth()), dropdown.show(), 
                        $(this).find(">a").addClass("active"), offset.left + dropdown.width() > $(window).width() && dropdown.addClass("menu-left");
                    }, function() {
                        dropdown.hide().removeClass("menu-left"), $(this).find(">a").removeClass("active");
                    });
                });
            },
            calculateWidth: function(element) {
                var that = element, sum = 0, dropdown = that.find(".dropdown"), submenus = dropdown.find(".dropdown-column");
                dropdown.css({
                    visibility: "",
                    display: "block"
                }), submenus.each(function() {
                    sum += $(this).outerWidth();
                }), dropdown.css({
                    visibility: "visible",
                    display: "none"
                }), dropdown.width(sum).css("margin-left", -10);
            }
        },
        footerStyle: {
            selector: "#footer_container",
            init: function() {
                var base = this, container = $(base.selector);
                base.run(container), $(window).resize(function() {
                    base.run(container);
                });
            },
            run: function(container) {
                var h;
                container.imagesLoaded(function() {
                    h = container.outerHeight(), $('div[role="main"]').css("margin-bottom", h);
                });
            }
        },
        updateCart: {
            selector: "#quick_cart",
            init: function() {
                var base = this, container = $(base.selector);
                container.live({
                    mouseenter: function() {
                        $(this).find(".cart_holder").slideDown({
                            duration: "200",
                            easing: $.bez(thb_easing)
                        });
                    },
                    mouseleave: function() {
                        $(this).find(".cart_holder").hide();
                    }
                }), $("body").bind("added_to_cart", SITE.updateCart.update_cart_dropdown);
            },
            update_cart_dropdown: function(event) {
                if ("undefined" != typeof event) {
                    var flashInterval = setInterval(function() {
                        $(SITE.updateCart.selector).toggleClass("active");
                    }, 500);
                    setTimeout(function() {
                        clearInterval(flashInterval);
                    }, 2500);
                }
            }
        },
        flex: {
            selector: ".flex",
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    var that = $(this), controls = that.data("controls") === !1 ? !1 : !0, bullets = that.data("bullets") === !1 ? !1 : !0;
                    that.imagesLoaded(function() {
                        that.removeClass("flex-start").flexslider({
                            animation: "slide",
                            directionNav: controls,
                            controlNav: bullets,
                            useCSS: !1,
                            slideshow: !1,
                            prevText: '<i class="fa fa-angle-left"></i>',
                            nextText: '<i class="fa fa-angle-right"></i>'
                        });
                    });
                });
            }
        },
        productSlider: {
            selector: "#product-nav",
            init: function() {
                var base = this, container = $(base.selector), images = $("#product-images"), zoom = images.data("zoom");
                container.flexslider({
                    animation: "slide",
                    controlNav: !1,
                    directionNav: !1,
                    animationLoop: !1,
                    slideshow: !1,
                    itemWidth: 106,
                    itemMargin: 10,
                    asNavFor: "#product-images"
                }), images.flexslider({
                    animation: "slide",
                    controlNav: !1,
                    directionNav: !0,
                    animationLoop: !1,
                    slideshow: !1,
                    prevText: '<i class="fa fa-angle-left"></i>',
                    nextText: '<i class="fa fa-angle-right"></i>',
                    sync: "#product-nav",
                    start: function(slider) {
                        zoom && $(slider.slides[0]).easyZoom({
                            preventClicks: !1
                        });
                    },
                    before: function(slider) {
                        zoom && $(slider.slides[slider.animatingTo]).easyZoom({
                            preventClicks: !1
                        });
                    }
                });
            }
        },
        variations: {
            selector: ".variations_form input[name=variation_id]",
            init: function() {
                var base = this, container = $(base.selector), org = $(".single-price.single_variation").html();
                container.on("change", function() {
                    var phtml, that = $(this), val = that.val(), images = $("#product-images");
                    if (setTimeout(function() {
                        phtml = val ? that.parents(".variations_form").find(".single_variation span.price").html() : org, 
                        $(".price.single_variation").html(phtml);
                    }, 100), $(".variations_form").length) {
                        var values, variations = [];
                        $(".variations_form").find("select").each(function() {
                            variations.push(this.value);
                        }), values = variations.join(",");
                        var v = $(".variations_form select option:selected").val(), i = images.find('li[data-variation="' + values + '"]').index(), flex = images.data("flexslider");
                        v && flex && i > 0 && flex.flexslider(i);
                    }
                });
            }
        },
        carousel: {
            selector: ".owl",
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    var that = $(this), columns = that.data("columns"), navigation = that.data("navigation") === !0 ? !0 : !1, autoplay = that.data("autoplay") === !1 ? !1 : !0, pagination = that.data("pagination") === !0 ? !0 : !1;
                    that.owlCarousel({
                        slideSpeed: 1200,
                        autoPlay: autoplay,
                        goToFirst: !0,
                        stopOnHover: !0,
                        navigation: navigation,
                        navigationText: [ "", "" ],
                        pagination: pagination,
                        responsive: !0,
                        items: columns,
                        itemsDesktop: !1,
                        itemsDesktopSmall: [ 980, 3 > columns ? columns : 3 ],
                        itemsTablet: [ 768, 2 > columns ? columns : 2 ],
                        itemsMobile: [ 479, 1 ]
                    }), that.hasClass("products") && SITE.shop.init();
                });
            }
        },
        lookbook: {
            selector: ".lookbook",
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    function center(number) {
                        var sync2visible = thumbnails.data("owlCarousel").owl.visibleItems, num = number, found = !1;
                        for (var i in sync2visible) num === sync2visible[i] && (found = !0);
                        found === !1 ? num > sync2visible[sync2visible.length - 1] ? thumbnails.trigger("owl.goTo", num - sync2visible.length + 2) : (num - 1 === -1 && (num = 0), 
                        thumbnails.trigger("owl.goTo", num)) : num === sync2visible[sync2visible.length - 1] ? thumbnails.trigger("owl.goTo", sync2visible[1]) : num === sync2visible[0] && thumbnails.trigger("owl.goTo", num - 1);
                    }
                    var that = $(this), thumbnails = that.parents(".carousel-container").next(".carousel-container").find(".lookbook-thumbnails");
                    that.owlCarousel({
                        slideSpeed: 1200,
                        autoPlay: !1,
                        goToFirst: !0,
                        stopOnHover: !0,
                        navigation: !1,
                        pagination: !1,
                        responsiveRefreshRate: 200,
                        responsive: !0,
                        items: 3,
                        itemsDesktop: !1,
                        itemsDesktopSmall: [ 980, 3 ],
                        itemsTablet: [ 768, 2 ],
                        itemsMobile: [ 479, 1 ],
                        addClassActive: !0,
                        afterAction: function() {
                            var current = this.currentItem;
                            thumbnails.find(".owl-item").removeClass("synced").eq(current).addClass("synced"), 
                            that.hasClass("shortcode") && (thumbnails.find(".owl-item").find("img").tooltip({
                                trigger: "manual",
                                container: "body"
                            }).tooltip("hide"), thumbnails.find(".owl-item").eq(current).find("img").tooltip("show")), 
                            thumbnails.data("owlCarousel") !== undefined && center(current);
                        }
                    }), thumbnails.owlCarousel({
                        items: 10,
                        itemsDesktop: [ 1199, 10 ],
                        itemsDesktopSmall: [ 979, 10 ],
                        itemsTablet: [ 768, 8 ],
                        itemsMobile: [ 479, 4 ],
                        pagination: !1,
                        responsiveRefreshRate: 100,
                        afterInit: function(el) {
                            el.find(".owl-item").eq(0).addClass("synced");
                        }
                    }), thumbnails.on("click", ".owl-item", function(e) {
                        e.preventDefault();
                        var number = $(this).data("owlItem");
                        that.trigger("owl.goTo", number);
                    });
                });
            }
        },
        packery: {
            selector: ".packery",
            init: function() {
                var base = this, container = $(base.selector);
                container.packery({
                    itemSelector: ".product",
                    gutter: 0
                }).imagesLoaded(function() {
                    container.packery();
                });
            }
        },
        toggle: {
            selector: ".toggle .title",
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    var that = $(this);
                    that.on("click", function() {
                        that.hasClass("toggled") ? that.removeClass("toggled").closest(".toggle").find(".inner").slideUp({
                            duration: 400,
                            easing: $.bez(thb_easing)
                        }) : that.addClass("toggled").closest(".toggle").find(".inner").slideDown({
                            duration: 400,
                            easing: $.bez(thb_easing)
                        });
                    });
                });
            }
        },
        jplayer: {
            selector: "[id^=jplayer_]",
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    var that = $(this), iface = that.data("interface"), mp3file = that.data("mp3"), swffile = that.data("swf");
                    that.jPlayer({
                        ready: function() {
                            $(this).jPlayer("setMedia", {
                                mp3: mp3file
                            });
                        },
                        swfPath: swffile,
                        cssSelectorAncestor: iface,
                        supplied: "mp3"
                    });
                });
            }
        },
        portfolio: {
            selector: ".thbportfolio.ajax",
            init: function() {
                var base = this, container = $(base.selector);
                $(window).load(function() {
                    container.isotope({
                        itemSelector: ".item",
                        layoutMode: "fitRows",
                        resizable: !1,
                        animationOptions: {
                            duration: 1e3,
                            easing: "linear",
                            queue: !1
                        }
                    });
                }), $(".filters a").click(function() {
                    $(".filters a").removeClass("active"), $(this).addClass("active");
                    var selector = $(this).attr("data-filter");
                    return container.isotope({
                        filter: selector
                    }), !1;
                }), $("#portfolioselect a").click(function() {
                    $("#portfolioselect a").removeClass("active"), $(this).addClass("active");
                    var selector = $(this).attr("data-filter");
                    return $("#portfolioselect").toggleClass("open"), $("#portfolioselect").find("ul").stop(!0, !0).slideToggle(600, $.bez(thb_easing), function() {
                        container.isotope({
                            filter: selector
                        });
                    }), !1;
                }), base.resize(container);
            },
            resize: function(container) {
                var cols = container.data("columns");
                $(window).smartresize(function() {
                    container.isotope({
                        masonry: {
                            columnWidth: container.width() / cols
                        }
                    });
                });
            }
        },
        portfolioPaginated: {
            selector: ".thbportfolio.paginated",
            init: function() {
                {
                    var base = this;
                    $(base.selector);
                }
                $("#portfolioselect a").on("click", function() {
                    $(this).parent().toggleClass("open"), $(this).parent().find("ul").stop(!0, !0).slideToggle(600, $.bez(thb_easing));
                });
            }
        },
        blank: {
            selector: ".thb-blank #wrapper",
            init: function() {
                var base = this, container = $(base.selector);
                base.resize(container), $(window).resize(function() {
                    base.resize(container);
                }), $(window).scroll(function() {
                    base.resize(container);
                });
            },
            resize: function(container) {
                var h = container.outerHeight();
                container.css("margin-top", h / -2);
            }
        },
        shareThisArticle: {
            selector: "#product_share",
            init: function() {
                var base = this, container = $(base.selector);
                container.find(".placeholder").sharrre({
                    share: {
                        googlePlus: !0,
                        facebook: !0,
                        twitter: !0,
                        pinterest: !1
                    },
                    buttons: {
                        googlePlus: {
                            annotation: "bubble"
                        },
                        facebook: {
                            width: "85"
                        }
                    },
                    urlCurl: $("body").data("sharrreurl"),
                    enableHover: !1,
                    enableCounter: !1,
                    enableTracking: !1
                });
            }
        },
        parallax: {
            selector: ".parallax_bg",
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    function backgroundAnimate() {
                        var top = win.width() > 767 ? win.height() - (that.offset().top - win.scrollTop()) : 0, yPos = Math.floor(-(top / speed));
                        that.is(":in-viewport") && win.width() > 767 && that[0].style.setProperty("background-position", "50% " + yPos + "px", "important"), 
                        window.requestAnimFrame(backgroundAnimate);
                    }
                    var that = $(this), speed = that.data("parallax-speed");
                    window.requestAnimFrame(backgroundAnimate);
                });
            }
        },
        animation: {
            selector: ".animation:not(.timertitle)",
            init: function() {
                var base = this, container = $(base.selector);
                base.control(container), $(window).scroll(function() {
                    base.control(container);
                });
            },
            control: function(element) {
                var t = -1;
                element.filter(":not(.animate):in-viewport").each(function() {
                    var that = $(this);
                    t++, setTimeout(function() {
                        if (that.addClass("animate"), that.hasClass("counter")) {
                            var f = that.find(".timer"), c = f.data("countto") ? f.data("countto") : 100, s = f.data("speed") ? f.data("speed") : 1500, title = that.find(".timertitle");
                            f.countTo({
                                from: 0,
                                to: c,
                                speed: s,
                                refreshInterval: 50,
                                onComplete: function() {
                                    title.addClass("animate");
                                }
                            });
                        }
                    }, 200 * t);
                });
            }
        },
        bargraph: {
            selector: ".progress_bar",
            init: function() {
                var base = this, container = $(base.selector);
                container.filter(":not(.appeared):in-viewport").each(function() {
                    var that = $(this), i = that.find(">span"), c = i.clone(), p = i.data("value");
                    c.appendTo(i).animate({
                        width: p + "%"
                    }, 1e3, $.bez(thb_easing)), that.addClass("appeared");
                });
            }
        },
        counter: {
            selector: ".counter",
            init: function() {
                var base = this, container = $(base.selector);
                $(window).scroll(function() {
                    SITE.animation.control(container);
                });
            }
        },
        customScroll: {
            selector: ".widget_layered_nav ul",
            init: function() {
                var base = this, container = $(base.selector);
                container.perfectScrollbar();
            }
        },
        shop: {
            selector: ".products .product",
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    var that = $(this);
                    that.find(".add_to_cart_button").on("click", function() {
                        "" !== $(this).data("added-text") && $(this).text($(this).data("added-text"));
                    }).end().find(".quick-view").on("click", function() {
                        that.addClass("loading");
                        var that2 = $(this), pid = that2.data("id");
                        return $.post(themeajax.url, {
                            action: "quickview",
                            id: pid
                        }, function(resp) {
                            $.magnificPopup.open({
                                mainClass: "mfp-move-horizontal product-popup",
                                items: {
                                    src: resp,
                                    type: "inline"
                                },
                                removalDelay: 500,
                                callbacks: {
                                    open: function() {
                                        $(this.content[0]).find("#lightbox-images").flexslider({
                                            animation: "slide",
                                            controlNav: !1,
                                            directionNav: !0,
                                            animationLoop: !1,
                                            slideshow: !1,
                                            prevText: '<i class="fa fa-angle-left"></i>',
                                            nextText: '<i class="fa fa-angle-right"></i>'
                                        }), $(this.content[0]).find("form").wc_variation_form();
                                    },
                                    change: function() {
                                        $(this.content[0]).find("#lightbox-images").removeData("flexslider").flexslider({
                                            animation: "slide",
                                            controlNav: !1,
                                            directionNav: !0,
                                            animationLoop: !1,
                                            slideshow: !1,
                                            prevText: '<i class="fa fa-angle-left"></i>',
                                            nextText: '<i class="fa fa-angle-right"></i>'
                                        }), $(this.content[0]).find("form").wc_variation_form(), $(this.contentContainer).removeClass("popup-loading");
                                    }
                                }
                            }), that.removeClass("loading"), $(".mfp-content .product_nav a").live("click", function() {
                                return $(".mfp-content").addClass("popup-loading"), $.post(themeajax.url, {
                                    action: "quickview",
                                    id: $(this).data("id")
                                }, function(resp) {
                                    $.magnificPopup.open({
                                        items: {
                                            src: resp,
                                            type: "inline"
                                        }
                                    });
                                }), !1;
                            });
                        }), !1;
                    });
                });
            }
        },
        reviews: {
            selector: "#add_review_button",
            init: function() {
                var base = this, container = $(base.selector), content = $("#add_review");
                container.on("click", function() {
                    return $(this).slideToggle(400, function() {
                        content.stop().slideToggle(400);
                    }), !1;
                }), content.find(".close").on("click", function() {
                    return content.stop().slideToggle(400, function() {
                        container.slideToggle(400);
                    }), !1;
                }), $("body").on("click", "#respond p.stars a", function() {
                    var that = $(this);
                    setTimeout(function() {
                        that.prevAll().addClass("active");
                    }, 10);
                });
            }
        },
        checkout: {
            selector: ".woocommerce-checkout",
            init: function() {
                $("#shippingsteps a").on("click", function() {
                    var that = $(this), target = that.data("target") ? $("#" + that.data("target")) : !1;
                    return target && ($("#shippingsteps li").removeClass("active"), that.parents("li").addClass("active"), 
                    $(".section").hide(), target.show()), $("body").trigger("country_to_state_changed"), 
                    !1;
                }), $("#createaccount", "#checkout_login").on("click", function() {
                    return $("#checkout_register", "#checkout_login").slideToggle(), !1;
                }), $("#guestcheckout", "#checkout_login").on("click", function() {
                    return $("#shippingsteps a").eq(1).trigger("click"), !1;
                }), $("[name=button_address_continue]").on("click", function() {
                    return $("form.checkout .billing").find(".input-text, select").trigger("change"), 
                    $("form.checkout .shipping_address").is(":visible") && $("form.checkout .shipping_address").find(".input-text, select").trigger("change"), 
                    0 === $("form.checkout .billing").find(".woocommerce-invalid-required-field:visible").length && $("#shippingsteps a").eq(2).trigger("click"), 
                    !1;
                }), $("#ship-to-different-address-checkbox").on("change", function() {
                    return $(".shipping_address").slideToggle("slow", function() {
                        $(".shipping_address").is(":hidden") && $("form.checkout .shipping_address").find("p.form-row").removeClass("woocommerce-invalid-required-field");
                    }), $("body").trigger("country_to_state_changed"), !1;
                });
            }
        },
        myaccount: {
            selector: ".woocommerce-account",
            init: function() {
                $("#my-account-nav a").on("click", function() {
                    var that = $(this), tabs = $(".tab-pane"), target = $(that.attr("href"));
                    return $("#my-account-nav li").removeClass("active"), that.parents("li").addClass("active"), 
                    tabs.hide(), target.fadeIn(), !1;
                }), $("#changepassword_btn").on("click", function() {
                    return $("#changeit").trigger("click"), !1;
                });
            }
        },
        magnificImage: {
            selector: '[rel="magnific"], .wp-caption a',
            init: function() {
                var stype, base = this, container = $(base.selector);
                container.each(function() {
                    stype = $(this).hasClass("video") ? "iframe" : "image", $(this).magnificPopup({
                        type: stype,
                        closeOnContentClick: !0,
                        fixedContentPos: !0,
                        mainClass: "mfp-move-horizontal",
                        removalDelay: 500,
                        image: {
                            verticalFit: !0
                        }
                    });
                });
            }
        },
        magnificInline: {
            selector: '[rel="inline"]',
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    var eclass = $(this).data("class") ? $(this).data("class") : "";
                    $(this).magnificPopup({
                        type: "inline",
                        midClick: !0,
                        mainClass: "mfp-move-horizontal " + eclass,
                        removalDelay: 500
                    });
                });
            }
        },
        magnificGallery: {
            selector: '[rel="gallery"]',
            init: function() {
                var base = this, container = $(base.selector);
                container.each(function() {
                    $(this).magnificPopup({
                        delegate: "a",
                        type: "image",
                        closeOnContentClick: !0,
                        fixedContentPos: !0,
                        mainClass: "mfp-move-horizontal",
                        removalDelay: 500,
                        closeMarkup: '<button title="%title%" class="mfp-close"></button>',
                        gallery: {
                            enabled: !0,
                            navigateByImgClick: !0,
                            preload: [ 0, 1 ]
                        },
                        image: {
                            verticalFit: !0,
                            titleSrc: function(item) {
                                return item.el.attr("title");
                            }
                        }
                    });
                });
            }
        },
        parsley: {
            selector: ".comment-form, .wpcf7-form",
            init: function() {
                var base = this, container = $(base.selector);
                $.fn.parsley && container.parsley();
            }
        },
        fullWidth: {
            selector: ".full-width-section",
            init: function() {
                var base = this, container = $(base.selector);
                base.resize(container), win.resize(function() {
                    base.resize(container);
                });
            },
            resize: function(container) {
                var body = $("body"), outerContainer = body.hasClass("boxed") ? $("#wrapper") : win, w = outerContainer.width(), OutMargin = Math.ceil((w - Math.floor(container.parents(".post-content").width())) / 2);
                container.each(function() {
                    var that = $(this);
                    body.hasClass("rtl") ? that[0].style.setProperty("margin-right", -OutMargin + "px", "important") : that[0].style.setProperty("margin-left", -OutMargin + "px", "important"), 
                    that[0].style.setProperty("padding-left", OutMargin + "px", "important"), that[0].style.setProperty("padding-right", OutMargin + "px", "important"), 
                    that[0].style.setProperty("visibility", "visible");
                });
            }
        },
        fullWidthContent: {
            selector: ".full-width-content",
            init: function() {
                var base = this, container = $(base.selector);
                base.resize(container), win.resize(function() {
                    base.resize(container);
                });
            },
            resize: function(container) {
                var body = $("body"), outerContainer = body.hasClass("boxed") ? $("#wrapper") : win, w = outerContainer.width(), OutMargin = Math.ceil((w - Math.floor(container.parents(".post").width())) / 2);
                container.each(function() {
                    $(this).css(body.hasClass("rtl") ? {
                        "margin-right": -OutMargin,
                        width: w
                    } : {
                        "margin-left": -OutMargin,
                        width: w
                    });
                });
            }
        },
        contact: {
            selector: "#contact-map",
            init: function() {
                var base = this, container = $(base.selector), mapzoom = container.data("map-zoom"), maplat = container.data("map-center-lat"), maplong = container.data("map-center-long"), mapinfo = container.data("pin-info"), pinimage = container.data("pin-image"), styles = [ {
                    stylers: [ {
                        hue: "#2DB5E2"
                    }, {
                        saturation: -20
                    } ]
                }, {
                    featureType: "road",
                    elementType: "geometry",
                    stylers: [ {
                        lightness: 100
                    }, {
                        visibility: "simplified"
                    } ]
                }, {
                    featureType: "road",
                    elementType: "labels",
                    stylers: [ {
                        visibility: "off"
                    } ]
                } ], latLng = new google.maps.LatLng(maplat, maplong), mapOptions = {
                    center: latLng,
                    styles: styles,
                    zoom: mapzoom,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    scrollwheel: !1,
                    panControl: !0,
                    zoomControl: 1,
                    mapTypeControl: !1,
                    scaleControl: !1,
                    streetViewControl: !1
                }, map = new google.maps.Map(document.getElementById("contact-map"), mapOptions);
                google.maps.event.addListenerOnce(map, "tilesloaded", function() {
                    var venuemarker = new google.maps.Marker({
                        position: latLng,
                        map: map,
                        icon: pinimage,
                        animation: google.maps.Animation.DROP
                    });
                    if (map.setCenter(latLng), mapinfo) {
                        var infowindow = new google.maps.InfoWindow({
                            content: '<div id="content"><div id="bodyContent"><p>' + mapinfo + "</p></div></div>"
                        });
                        infowindow.open(map, venuemarker), map.setCenter(latLng);
                    }
                });
            }
        },
        favicon: {
            selector: "body",
            init: function() {
                var base = this, container = $(base.selector), count = container.data("cart-count");
                favicon = new Favico({
                    bgColor: "#e25842",
                    textColor: "#fff"
                }), favicon.badge(count);
            }
        },
        styleSwitcher: {
            selector: "#style-switcher",
            init: function() {
                var base = this, container = $(base.selector), toggle = container.find(".style-toggle"), onoffswitch = container.find(".switch");
                toggle.on("click", function() {
                    return container.add($(this)).toggleClass("active"), !1;
                }), onoffswitch.each(function() {
                    var that = $(this);
                    $(this).find("a").on("click", function() {
                        return that.find("a").removeClass("active"), $(this).addClass("active"), "header" === $(this).parents("ul").data("name") && ($(document.body).removeClass("notfixed"), 
                        $(document.body).addClass($(this).data("class")), $("#header, #header .logo a, #header .desktop-menu ul, #header .desktop-menu .searchlink, .headersearch").attr("style", ""), 
                        $("#header").removeClass("fixed").removeClass("small"), $("#header").addClass($(this).data("class2"))), 
                        !1;
                    });
                });
                var style = $('<style type="text/css" id="theme_color" />').appendTo("head");
                container.find(".first").minicolors({
                    defaultValue: $(".first").data("default"),
                    change: function(hex) {
                        style.html(".sf-menu li.current-menu-item, .sf-menu li ul li:hover, .owl-buttons>div:hover, .jp-interface, .filters li a.active, .filters li a:hover, .iconbox.left > span, .iconbox.right > span, ul.accordion > li.active div.title, .toggle .title.toggled, .btn, input[type=submit], .comment-reply-link, .label.red, .dropcap.boxed, .bargraph > span span, .pagenavi ul li.disabled a, .mobile-menu ul li a.active, .taglink:hover, .widget.widget_tag_cloud li > a:hover { background:" + hex + "; } #breadcrumb .name > div { border-color: " + hex + "; } a:hover, .iconbox.top > span { color: " + hex + "; } ::-webkit-selection{ background-color: " + hex + "; } ::-moz-selection{ background-color: " + hex + "; } ::selection{ background-color: " + hex + "; } ");
                    }
                }), container.find(".second").minicolors({
                    defaultValue: $(".second").data("default"),
                    change: function(hex) {
                        style.html(".flex .bulletrow .flex-control-nav.flex-control-paging a.flex-active, .pricing .item.featured .header, .flex .bulletrow .flex-control-nav.flex-control-paging a:hover, .btn.red, input[type=submit].red, .comment-reply-link.red { background:" + hex + "; } blockquote.styled, .post .post-gallery.quote, .widget.widget_calendar table caption { border-color: " + hex + "; } .iconbox.top:hover > span, .testimonials.flex blockquote p cite, .widget.widget_calendar table caption, .fresco .overlay .details, .fresco .overlay .zoom, .fresco .overlay .static { color: " + hex + "; }");
                    }
                });
            }
        }
    }, $(window).resize(function() {
        SITE.responsiveNav.toggle(), SITE.navDropdown.init();
    }), $(window).scroll(function() {
        SITE.bargraph.init();
    }), $doc.ready(function() {
        SITE.init();
    });
}(jQuery, this);